// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sysmsg.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "Sysmsg.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - SysmsgRoot

@implementation SysmsgRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - SysmsgRoot_FileDescriptor

static GPBFileDescriptor *SysmsgRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"protocol.protobuf"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - SysMsgPushRequest

@implementation SysMsgPushRequest

@dynamic from;
@dynamic fromDomain;
@dynamic fromName;
@dynamic to;
@dynamic toDomain;
@dynamic type;
@dynamic msgid;
@dynamic content;
@dynamic chatId;
@dynamic sceneId;
@dynamic appId;

typedef struct SysMsgPushRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t fromDomain;
  int32_t toDomain;
  int32_t type;
  NSString *from;
  NSString *fromName;
  NSString *to;
  NSString *content;
  NSString *sceneId;
  NSString *appId;
  int64_t msgid;
  int64_t chatId;
} SysMsgPushRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = SysMsgPushRequest_FieldNumber_From,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SysMsgPushRequest__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromDomain",
        .dataTypeSpecific.className = NULL,
        .number = SysMsgPushRequest_FieldNumber_FromDomain,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SysMsgPushRequest__storage_, fromDomain),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "fromName",
        .dataTypeSpecific.className = NULL,
        .number = SysMsgPushRequest_FieldNumber_FromName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SysMsgPushRequest__storage_, fromName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "to",
        .dataTypeSpecific.className = NULL,
        .number = SysMsgPushRequest_FieldNumber_To,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(SysMsgPushRequest__storage_, to),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toDomain",
        .dataTypeSpecific.className = NULL,
        .number = SysMsgPushRequest_FieldNumber_ToDomain,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(SysMsgPushRequest__storage_, toDomain),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = SysMsgPushRequest_FieldNumber_Type,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(SysMsgPushRequest__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msgid",
        .dataTypeSpecific.className = NULL,
        .number = SysMsgPushRequest_FieldNumber_Msgid,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(SysMsgPushRequest__storage_, msgid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = SysMsgPushRequest_FieldNumber_Content,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(SysMsgPushRequest__storage_, content),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "chatId",
        .dataTypeSpecific.className = NULL,
        .number = SysMsgPushRequest_FieldNumber_ChatId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(SysMsgPushRequest__storage_, chatId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "sceneId",
        .dataTypeSpecific.className = NULL,
        .number = SysMsgPushRequest_FieldNumber_SceneId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(SysMsgPushRequest__storage_, sceneId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = SysMsgPushRequest_FieldNumber_AppId,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(SysMsgPushRequest__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SysMsgPushRequest class]
                                     rootClass:[SysmsgRoot class]
                                          file:SysmsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SysMsgPushRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\002\n\000\003\010\000\005\010\000\t\006\000\n\007\000\013\005\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum SysMsgPushRequest_SysMsgType

GPBEnumDescriptor *SysMsgPushRequest_SysMsgType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Welcome\000KfAcceptRequest\000WaitForKf\000KfOffl"
        "ine\000KfTurnOtherKf\000EndConversationWithKf\000";
    static const int32_t values[] = {
        SysMsgPushRequest_SysMsgType_Welcome,
        SysMsgPushRequest_SysMsgType_KfAcceptRequest,
        SysMsgPushRequest_SysMsgType_WaitForKf,
        SysMsgPushRequest_SysMsgType_KfOffline,
        SysMsgPushRequest_SysMsgType_KfTurnOtherKf,
        SysMsgPushRequest_SysMsgType_EndConversationWithKf,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(SysMsgPushRequest_SysMsgType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:SysMsgPushRequest_SysMsgType_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL SysMsgPushRequest_SysMsgType_IsValidValue(int32_t value__) {
  switch (value__) {
    case SysMsgPushRequest_SysMsgType_Welcome:
    case SysMsgPushRequest_SysMsgType_KfAcceptRequest:
    case SysMsgPushRequest_SysMsgType_WaitForKf:
    case SysMsgPushRequest_SysMsgType_KfOffline:
    case SysMsgPushRequest_SysMsgType_KfTurnOtherKf:
    case SysMsgPushRequest_SysMsgType_EndConversationWithKf:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - SysMsgPushResponse

@implementation SysMsgPushResponse

@dynamic msgid;
@dynamic timestamp;

typedef struct SysMsgPushResponse__storage_ {
  uint32_t _has_storage_[1];
  int64_t msgid;
  int64_t timestamp;
} SysMsgPushResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "msgid",
        .dataTypeSpecific.className = NULL,
        .number = SysMsgPushResponse_FieldNumber_Msgid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SysMsgPushResponse__storage_, msgid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "timestamp",
        .dataTypeSpecific.className = NULL,
        .number = SysMsgPushResponse_FieldNumber_Timestamp,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SysMsgPushResponse__storage_, timestamp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SysMsgPushResponse class]
                                     rootClass:[SysmsgRoot class]
                                          file:SysmsgRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SysMsgPushResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
