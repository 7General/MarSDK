// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messagecmd.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "Messagecmd.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - MessagecmdRoot

@implementation MessagecmdRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - Enum CmdID

GPBEnumDescriptor *CmdID_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "CmdIdDefault\000CmdIdAuth\000CmdIdLogout\000CmdId"
        "Kickout\000CmdIdKeepalive\000CmdIdC2Gsend\000CmdI"
        "dC2Gpush\000CmdIdNotify\000CmdIdSync\000CmdIdC2Kf"
        "\000CmdIdKf2C\000CmdIdC2Ai\000CmdIdAi2C\000CmdIdDist"
        "ributeSend\000CmdIdDistributePush\000CmdIdScen"
        "eEndSend\000CmdIdSceneEndPush\000CmdIdRate\000Cmd"
        "IdHistory\000CmdIdWelcome\000CmdIdSystemMsg\000";
    static const int32_t values[] = {
        CmdID_CmdIdDefault,
        CmdID_CmdIdAuth,
        CmdID_CmdIdLogout,
        CmdID_CmdIdKickout,
        CmdID_CmdIdKeepalive,
        CmdID_CmdIdC2Gsend,
        CmdID_CmdIdC2Gpush,
        CmdID_CmdIdNotify,
        CmdID_CmdIdSync,
        CmdID_CmdIdC2Kf,
        CmdID_CmdIdKf2C,
        CmdID_CmdIdC2Ai,
        CmdID_CmdIdAi2C,
        CmdID_CmdIdDistributeSend,
        CmdID_CmdIdDistributePush,
        CmdID_CmdIdSceneEndSend,
        CmdID_CmdIdSceneEndPush,
        CmdID_CmdIdRate,
        CmdID_CmdIdHistory,
        CmdID_CmdIdWelcome,
        CmdID_CmdIdSystemMsg,
    };
    static const char *extraTextFormatInfo = "\006\005c\342\203d\000\006c\342\203d\000\tc\342\203A\000\nc\342\342\002\000\013c\342\203A\000\014c\342\342\002\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(CmdID)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:CmdID_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL CmdID_IsValidValue(int32_t value__) {
  switch (value__) {
    case CmdID_CmdIdDefault:
    case CmdID_CmdIdAuth:
    case CmdID_CmdIdLogout:
    case CmdID_CmdIdKickout:
    case CmdID_CmdIdKeepalive:
    case CmdID_CmdIdC2Gsend:
    case CmdID_CmdIdC2Gpush:
    case CmdID_CmdIdNotify:
    case CmdID_CmdIdSync:
    case CmdID_CmdIdC2Kf:
    case CmdID_CmdIdKf2C:
    case CmdID_CmdIdC2Ai:
    case CmdID_CmdIdAi2C:
    case CmdID_CmdIdDistributeSend:
    case CmdID_CmdIdDistributePush:
    case CmdID_CmdIdSceneEndSend:
    case CmdID_CmdIdSceneEndPush:
    case CmdID_CmdIdRate:
    case CmdID_CmdIdHistory:
    case CmdID_CmdIdWelcome:
    case CmdID_CmdIdSystemMsg:
      return YES;
    default:
      return NO;
  }
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
