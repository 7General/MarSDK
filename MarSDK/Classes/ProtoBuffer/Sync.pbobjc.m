// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "Sync.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - SyncRoot

@implementation SyncRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - SyncRoot_FileDescriptor

static GPBFileDescriptor *SyncRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"protocol.protobuf"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - SyncRequest

@implementation SyncRequest

@dynamic uid;
@dynamic domain;
@dynamic offset;
@dynamic limit;
@dynamic clientType;
@dynamic logId;
@dynamic appId;

typedef struct SyncRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t domain;
  int32_t limit;
  int32_t clientType;
  NSString *uid;
  NSString *logId;
  NSString *appId;
  int64_t offset;
} SyncRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uid",
        .dataTypeSpecific.className = NULL,
        .number = SyncRequest_FieldNumber_Uid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SyncRequest__storage_, uid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "domain",
        .dataTypeSpecific.className = NULL,
        .number = SyncRequest_FieldNumber_Domain,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SyncRequest__storage_, domain),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "offset",
        .dataTypeSpecific.className = NULL,
        .number = SyncRequest_FieldNumber_Offset,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SyncRequest__storage_, offset),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "limit",
        .dataTypeSpecific.className = NULL,
        .number = SyncRequest_FieldNumber_Limit,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(SyncRequest__storage_, limit),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "clientType",
        .dataTypeSpecific.className = NULL,
        .number = SyncRequest_FieldNumber_ClientType,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(SyncRequest__storage_, clientType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "logId",
        .dataTypeSpecific.className = NULL,
        .number = SyncRequest_FieldNumber_LogId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(SyncRequest__storage_, logId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = SyncRequest_FieldNumber_AppId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(SyncRequest__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SyncRequest class]
                                     rootClass:[SyncRoot class]
                                          file:SyncRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SyncRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\005\n\000\006\005\000\007\005\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SyncMsg

@implementation SyncMsg

@dynamic from;
@dynamic fromName;
@dynamic fromDomain;
@dynamic chatId;
@dynamic content;
@dynamic msgid;
@dynamic sequence;
@dynamic cmdId;
@dynamic sendTime;
@dynamic type;
@dynamic appId;
@dynamic sceneId;
@dynamic extra;

typedef struct SyncMsg__storage_ {
  uint32_t _has_storage_[1];
  int32_t fromDomain;
  int32_t sequence;
  int32_t cmdId;
  int32_t type;
  NSString *from;
  NSString *fromName;
  NSString *content;
  NSString *appId;
  NSString *sceneId;
  NSString *extra;
  int64_t chatId;
  int64_t msgid;
  int64_t sendTime;
} SyncMsg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = SyncMsg_FieldNumber_From,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SyncMsg__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromName",
        .dataTypeSpecific.className = NULL,
        .number = SyncMsg_FieldNumber_FromName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SyncMsg__storage_, fromName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromDomain",
        .dataTypeSpecific.className = NULL,
        .number = SyncMsg_FieldNumber_FromDomain,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SyncMsg__storage_, fromDomain),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "chatId",
        .dataTypeSpecific.className = NULL,
        .number = SyncMsg_FieldNumber_ChatId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(SyncMsg__storage_, chatId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = SyncMsg_FieldNumber_Content,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(SyncMsg__storage_, content),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgid",
        .dataTypeSpecific.className = NULL,
        .number = SyncMsg_FieldNumber_Msgid,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(SyncMsg__storage_, msgid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "sequence",
        .dataTypeSpecific.className = NULL,
        .number = SyncMsg_FieldNumber_Sequence,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(SyncMsg__storage_, sequence),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "cmdId",
        .dataTypeSpecific.className = NULL,
        .number = SyncMsg_FieldNumber_CmdId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(SyncMsg__storage_, cmdId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "sendTime",
        .dataTypeSpecific.className = NULL,
        .number = SyncMsg_FieldNumber_SendTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(SyncMsg__storage_, sendTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = SyncMsg_FieldNumber_Type,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(SyncMsg__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "appId",
        .dataTypeSpecific.className = NULL,
        .number = SyncMsg_FieldNumber_AppId,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(SyncMsg__storage_, appId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sceneId",
        .dataTypeSpecific.className = NULL,
        .number = SyncMsg_FieldNumber_SceneId,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(SyncMsg__storage_, sceneId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "extra",
        .dataTypeSpecific.className = NULL,
        .number = SyncMsg_FieldNumber_Extra,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(SyncMsg__storage_, extra),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SyncMsg class]
                                     rootClass:[SyncRoot class]
                                          file:SyncRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SyncMsg__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\002\010\000\003\n\000\004\006\000\010\005\000\t\010\000\013\005\000\014\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SyncResponse

@implementation SyncResponse

@dynamic msgArray, msgArray_Count;
@dynamic status;

typedef struct SyncResponse__storage_ {
  uint32_t _has_storage_[1];
  int32_t status;
  NSMutableArray *msgArray;
} SyncResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "msgArray",
        .dataTypeSpecific.className = GPBStringifySymbol(SyncMsg),
        .number = SyncResponse_FieldNumber_MsgArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(SyncResponse__storage_, msgArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = SyncResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SyncResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SyncResponse class]
                                     rootClass:[SyncRoot class]
                                          file:SyncRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SyncResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum SyncResponse_Status

GPBEnumDescriptor *SyncResponse_Status_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Ok\000Err\000";
    static const int32_t values[] = {
        SyncResponse_Status_Ok,
        SyncResponse_Status_Err,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(SyncResponse_Status)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:SyncResponse_Status_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL SyncResponse_Status_IsValidValue(int32_t value__) {
  switch (value__) {
    case SyncResponse_Status_Ok:
    case SyncResponse_Status_Err:
      return YES;
    default:
      return NO;
  }
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
